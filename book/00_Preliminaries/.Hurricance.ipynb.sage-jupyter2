{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"e31436","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"a6790a","input":"import matplotlib.pyplot as plt\nx = [5, 6]\ny = [6, 7]\nplt.figure(figsize=(2,2))\nplt.scatter(x,y)\nplt.xlim(0, 10)\nplt.ylim(0, 10)","output":{"0":{"data":{"text/plain":"(0.0, 10.0)"},"exec_count":1,"output_type":"execute_result"},"1":{"data":{"image/png":"fdab5a98342b8ede2f3dc0415e1dbae01e278f20","text/plain":"<Figure size 144x144 with 1 Axes>"},"exec_count":1,"metadata":{"image/png":{"height":143,"width":152},"needs_background":"light"},"output_type":"execute_result"}},"pos":0,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"a11a04","input":"import csv\n\nx = []\ny = []\n\n# Open the data file\nwith open(\"irma.csv\") as f:\n    reader = csv.reader(f)\n    next(reader)\n    for row in reader:\n        latitude = float(row[2])\n        longitude = float(row[3])\n        \n        x.append((longitude + 90)*964/(right-left))\n        y.append((height*(1 - (latitude - bottom)/(top-bottom)))\n        \nprint(\"x-coords:\", x)\nprint(\"y-coords:\", y)","output":{"0":{"ename":"SyntaxError","evalue":"unexpected EOF while parsing (<ipython-input-13-8151834dc555>, line 15)","output_type":"error","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-13-8151834dc555>\"\u001b[0;36m, line \u001b[0;32m15\u001b[0m\n\u001b[0;31m    y.append((height*(1 - (latitude - bottom)/(top-bottom)))\u001b[0m\n\u001b[0m                                                            ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m unexpected EOF while parsing\n"]}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"05a089","input":"import matplotlib.image as mpi\nimg = mpi.imread('atlantic-basin.png')\n\nplt.imshow(img)\n\n# latitude/longitude co-ordinates of edges of map\nleft = -90\nright = -17.06\nbottom = 0\ntop = 45\n\n# dimensions of image in pixels\nwidth = 964\nheight = 600\n\n#lat/long of New York\n\nlat_NY = 40.7\nlong_NY = -74.0\n\nx_NY = (long_NY + 90)*964/(right-left)\ny_NY = (height*(1 - (lat_NY - bottom)/(top-bottom)))\n\nprint(\"NY x pos:\", x_NY)\nprint(\"NY y pos:\", y_NY)\n\nplt.scatter(x_NY, y_NY)\nplt.text(x_NY, y_NY, \"New York\", color=\"white\")\n\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"NY x pos: 211.46147518508363\nNY y pos: 57.3333333333333\n"},"1":{"data":{"text/plain":"Text(211.46147518508363, 57.3333333333333, 'New York')"},"exec_count":3,"output_type":"execute_result"},"2":{"data":{"image/png":"4b1106ba5629a85b35edb051a33e3f5aa554a94a","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":3,"metadata":{"image/png":{"height":414,"width":652},"needs_background":"light"},"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"6a138a","input":"plt.imshow(img)\nplt.scatter(x, y, color='purple')","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7f93f6762b20>"},"exec_count":4,"output_type":"execute_result"},"1":{"data":{"image/png":"90778e965925b059069f6d6e8bb8667cb16b3fd1","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":4,"metadata":{"image/png":{"height":414,"width":652},"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"1e588e","input":"from matplotlib import animation\n\nims = []\nfor i in range(10):\n    im = plt.imshow(img, animated=True)\n    plt.scatter(i*90, 300)\n    ims.append([im])\n    \n    \nfig = plt.figure()\nani = animation.ArtistAnimation(fig, ims, interval=50, blit=True,\n                                repeat_delay=1000)","output":{"0":{"data":{"image/png":"8f2e15cf1e0056b25eea7bbac9a95eec5db0308a","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":5,"metadata":{"image/png":{"height":414,"width":652},"needs_background":"light"},"output_type":"execute_result"},"1":{"data":{"text/plain":"<Figure size 864x504 with 0 Axes>"},"exec_count":5,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"eb39a4","input":"import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nimport matplotlib.image as mpi\nimg = mpi.imread('atlantic-basin.png')\n\nfig = plt.figure()\nax = plt.axes()\npatch = plt.Circle((0, 0), 20, fc='y')\n\n\ndef init():\n    patch.center = (20, 20)\n    ax.add_patch(patch)\n    return patch,\n\ndef animate(i):\n    patch.center = (x[i], y[i])\n    return patch,\n\nanim = animation.FuncAnimation(fig, animate, \n                               init_func=init, \n                               frames=len(x), \n                               interval=20,\n                               blit=True)\n\nplt.imshow(img,zorder=0)\nanim.save('hurricane_irma.mp4', writer = 'ffmpeg', fps=30)\nplt.show()","output":{"0":{"data":{"image/png":"a71fa6b3b376d5cae77fdbf4f4c603b5a42263b2","text/plain":"<Figure size 864x504 with 1 Axes>"},"exec_count":6,"metadata":{"image/png":{"height":414,"width":652},"needs_background":"light"},"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"70872c","input":"latitude-bottom\n","output":{"0":{"data":{"text/plain":"35.1"},"exec_count":7,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"id":0,"time":1629384857852,"type":"user"}
{"last_load":1629384859157,"type":"file"}