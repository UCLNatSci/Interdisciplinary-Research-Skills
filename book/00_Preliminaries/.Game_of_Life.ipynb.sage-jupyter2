{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":80707584},"trust":true,"type":"settings"}
{"cell_type":"markdown","exec_count":26,"id":"3875cd","input":"Next we set up the affine transformations:","kernel":"python3","pos":3,"state":"done","type":"cell"}
{"cell_type":"markdown","exec_count":27,"id":"1b5f19","input":"Then we use a `for` loop to repeatdly apply the affine transormations:","kernel":"python3","pos":7.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"8db8fa","input":"Finally, plot the resulting image:","pos":8.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"aee12a","input":"First we import necessary libraries for arrays and plotting:","pos":-0.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"d0e614","input":"Then we set the number of points and width and height:","pos":6.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"e46cd0","input":"# The Barnsley Fern\n[ref: https://scipython.com/book/chapter-7-matplotlib/examples/the-barnsley-fern/]\n\nThe Barnsley Fern is a fractal which resembles the Black Spleenwort species of fern. It is constructed by plotting a sequence of points in the (x,y) plane, starting at (0,0), generated by the following [affine transformations](https://en.wikipedia.org/wiki/Affine_transformation) f1, f2, f3, and f4 where each transformation is applied to the previous point and chosen at random with probabilities $p_1=0.01$, $p_2=0.85$, $p_3=0.07$ and $p_4=0.07$.\n\n\\begin{align*}\nf_1(x,y) &= \\left( \\begin{array}{ll} 0 & 0\\\\0 & 0.16 \\end{array}\\right)\n\\left( \\begin{array}{l}x\\\\y\\end{array} \\right)\\\\\nf_2(x,y) &= \\left( \\begin{array}{ll} 0.85 & 0.04\\\\-0.04 & 0.85 \\end{array}\\right)\n\\left( \\begin{array}{l}x\\\\y\\end{array} \\right) + \\left( \\begin{array}{l}0\\\\1.6\\end{array} \\right)\\\\\nf_3(x,y) &= \\left( \\begin{array}{ll} 0.2 & -0.26\\\\0.23 & 0.22 \\end{array}\\right)\n\\left( \\begin{array}{l}x\\\\y\\end{array} \\right) + \\left( \\begin{array}{l}0\\\\1.6\\end{array} \\right)\\\\\nf_4(x,y) &= \\left( \\begin{array}{ll} -0.15 & 0.28\\\\0.26 & 0.24 \\end{array}\\right)\n\\left( \\begin{array}{l}x\\\\y\\end{array} \\right) + \\left( \\begin{array}{l}0\\\\0.44\\end{array} \\right)\n\\end{align*}","pos":-1,"state":"done","type":"cell"}
{"end":1598550236675,"exec_count":29,"id":"e95f6e","input":"import numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm","kernel":"python3","pos":0,"start":1598550236671,"state":"done","type":"cell"}
{"end":1598550239211,"exec_count":31,"id":"8b6735","input":"npts = 50000\n# Canvas size (pixels)\nwidth, height = 300, 300\naimg = np.zeros((width, height))","kernel":"python3","pos":7,"start":1598550239203,"state":"done","type":"cell"}
{"end":1598550242370,"exec_count":32,"id":"db8f1c","input":"x, y = 0, 0\nfor i in range(npts):\n    # Pick a random transformation and apply it\n    f = np.random.choice(fs, p=[0.01, 0.85, 0.07, 0.07])\n    x, y = f(x,y)\n    # Map (x,y) to pixel coordinates.\n    # NB we \"know\" that -2.2 < x < 2.7 and 0 <= y < 10\n\n    ix, iy = int(width / 2 + x * width / 10), int(y * height / 12)\n    # Set this point of the array to 1 to mark a point in the fern\n    aimg[iy, ix] = 1","kernel":"python3","pos":8,"start":1598550240671,"state":"done","type":"cell"}
{"end":1598550244782,"exec_count":33,"id":"e6ebb6","input":"plt.imshow(aimg[::-1,:], cmap=cm.Greens)\nplt.show()","kernel":"python3","output":{"0":{"data":{"image/png":"97f9621433aeb81b36c836875515ddcef2c80ab3","text/plain":"<Figure size 864x504 with 1 Axes>"},"metadata":{"image/png":{"height":414,"width":421},"needs_background":"light"}}},"pos":9,"start":1598550244315,"state":"done","type":"cell"}
{"end":1598550261277,"exec_count":34,"id":"62ddbc","input":"f1 = lambda x,y: (0., 0.16)\nf2 = lambda x,y: (0.85*x + 0.04*y, -0.04*x + 0.85*y + 1.6)\nf3 = lambda x,y: (0.2*x - 0.26*y, 0.23*x + 0.22*y + 1.6)\nf4 = lambda x,y: (-0.15*x + 0.28*y, 0.26*x + 0.24*y + 0.44)\nfs = [f1, f2, f3, f4]","kernel":"python3","pos":6,"start":1598550261273,"state":"done","type":"cell"}
{"id":"6e0294","input":"","pos":10,"state":"done","type":"cell"}
{"id":0,"time":1598551247481,"type":"user"}
{"last_load":1598553100347,"type":"file"}